
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Loading required package: deSolve
Loading required package: subplex
Loading required package: mvtnorm
> 
> set.seed(577639485L)
> 
> kalman.filter <- function (y, x0, a, b, sigma, tau) {
+   n <- nrow(y)
+   ntimes <- ncol(y)
+   sigma.sq <- sigma%*%t(sigma)
+   tau.sq <- tau%*%t(tau)
+   inv.tau.sq <- solve(tau.sq)
+   cond.dev <- numeric(ntimes)
+   filter.mean <- matrix(0,n,ntimes)
+   pred.mean <- matrix(0,n,ntimes)
+   pred.var <- array(0,dim=c(n,n,ntimes))
+   dev <- 0
+   m <- x0
+   v <- diag(0,n)
+   for (k in seq(length=ntimes)) {
+     pred.mean[,k] <- M <- a%*%m
+     pred.var[,,k] <- V <- a%*%v%*%t(a)+sigma.sq
+     q <- b%*%V%*%t(b)+tau.sq
+     r <- y[,k]-b%*%M
+     cond.dev[k] <- n*log(2*pi)+log(det(q))+t(r)%*%solve(q,r)
+     dev <- dev+cond.dev[k]
+     q <- t(b)%*%inv.tau.sq%*%b+solve(V)
+     v <- solve(q)
+     filter.mean[,k] <- m <- v%*%(t(b)%*%inv.tau.sq%*%y[,k]+solve(V,M))
+   }
+   list(
+        pred.mean=pred.mean,
+        pred.var=pred.var,
+        filter.mean=filter.mean,
+        cond.loglik=-0.5*cond.dev,
+        loglik=-0.5*dev
+        )
+ }
> 
> kalman <- function (x, object, params) {
+   y <- data.array(object)
+   p <- params
+   p[names(x)] <- x
+   x0 <- init.state(object,params=p)
+   a <- matrix(p[c('alpha.1','alpha.2','alpha.3','alpha.4')],2,2)
+   b <- diag(1,2)
+   sigma <- matrix(p[c('sigma.1','sigma.2','sigma.2','sigma.3')],2,2)
+   sigma[1,2] <- 0
+   tau <- diag(p['tau'],2,2)
+   -kalman.filter(y,x0,a,b,sigma,tau)$loglik
+ }
> 
> data(ou2)
> 
> # true coefficients
> p.truth <- coef(ou2)
> cat("coefficients at `truth'\n")
coefficients at `truth'
> print(p.truth[c('alpha.1','alpha.4','x1.0','x2.0')],digits=4)
alpha.1 alpha.4    x1.0    x2.0 
    0.8     0.9    -3.0     4.0 
> cat("Kalman filter log likelihood at truth\n")
Kalman filter log likelihood at truth
> print(loglik.truth <- -kalman(p.truth,ou2,p.truth),digits=4)
[1] -479.4
> 
> # make a wild guess
> p.guess <- p.truth[c('alpha.1','alpha.4','x1.0','x2.0')]*exp(rnorm(n=4,mean=0,sd=0.5))
> cat("coefficients at guess\n")
coefficients at guess
> print(p.guess,digits=4)
alpha.1 alpha.4    x1.0    x2.0 
 0.4237  0.6210 -4.9309  4.2186 
> cat("Kalman filter log likelihood at guess\n")
Kalman filter log likelihood at guess
> print(loglik.guess <- -kalman(p.guess,ou2,p.truth),digits=4)
[1] -511.4
> 
> # find MLE using Kalman filter starting at the guess
> cat("running Kalman filter estimation\n")
running Kalman filter estimation
> tic <- Sys.time()
> kalm.fit1 <- optim(p.guess,kalman,object=ou2,params=p.truth,hessian=T,control=list(trace=2))
  Nelder-Mead direct search function minimizer
function value for initial parameters = 511.408754
  Scaled convergence tolerance is 7.62058e-06
Stepsize computed as 0.493088
BUILD              5 511.479973 505.078590
REFLECTION         7 511.408754 477.669704
LO-REDUCTION       9 511.265919 477.669704
HI-REDUCTION      11 508.118826 477.669704
HI-REDUCTION      13 505.078590 477.669704
HI-REDUCTION      15 486.185588 477.669704
LO-REDUCTION      17 482.985184 477.669704
HI-REDUCTION      19 482.451265 477.669704
HI-REDUCTION      21 479.401805 477.669704
LO-REDUCTION      23 478.854608 477.669704
HI-REDUCTION      25 478.170111 477.669704
HI-REDUCTION      27 477.854748 477.669704
HI-REDUCTION      29 477.842132 477.649565
HI-REDUCTION      31 477.816787 477.636023
HI-REDUCTION      33 477.712383 477.636023
HI-REDUCTION      35 477.669704 477.631174
REFLECTION        37 477.649565 477.604428
HI-REDUCTION      39 477.642236 477.604428
REFLECTION        41 477.636023 477.598062
HI-REDUCTION      43 477.631174 477.598062
LO-REDUCTION      45 477.606198 477.596516
HI-REDUCTION      47 477.604428 477.589627
HI-REDUCTION      49 477.600403 477.589627
EXTENSION         51 477.598062 477.560652
HI-REDUCTION      53 477.596516 477.560652
LO-REDUCTION      55 477.591225 477.560652
LO-REDUCTION      57 477.589627 477.560652
LO-REDUCTION      59 477.581884 477.560652
LO-REDUCTION      61 477.576730 477.560652
EXTENSION         63 477.576718 477.547516
EXTENSION         65 477.565957 477.525920
LO-REDUCTION      67 477.560890 477.525920
EXTENSION         69 477.560652 477.509557
LO-REDUCTION      71 477.547516 477.509557
EXTENSION         73 477.530502 477.486327
LO-REDUCTION      75 477.525920 477.486327
LO-REDUCTION      77 477.513811 477.486327
LO-REDUCTION      79 477.509557 477.486327
LO-REDUCTION      81 477.503553 477.486327
REFLECTION        83 477.493747 477.484757
LO-REDUCTION      85 477.493230 477.484757
LO-REDUCTION      87 477.492532 477.484757
REFLECTION        89 477.487381 477.483024
EXTENSION         91 477.486327 477.479960
LO-REDUCTION      93 477.485973 477.479960
LO-REDUCTION      95 477.484757 477.479960
REFLECTION        97 477.483024 477.479805
REFLECTION        99 477.482467 477.478335
REFLECTION       101 477.479987 477.477966
LO-REDUCTION     103 477.479960 477.477966
LO-REDUCTION     105 477.479805 477.477966
REFLECTION       107 477.478636 477.477531
EXTENSION        109 477.478562 477.476522
EXTENSION        111 477.478335 477.475747
LO-REDUCTION     113 477.477966 477.475747
EXTENSION        115 477.477531 477.474150
EXTENSION        117 477.476522 477.469293
LO-REDUCTION     119 477.475945 477.469293
LO-REDUCTION     121 477.475747 477.469293
EXTENSION        123 477.474150 477.465181
EXTENSION        125 477.472564 477.461183
EXTENSION        127 477.471851 477.456311
LO-REDUCTION     129 477.469293 477.456311
EXTENSION        131 477.465181 477.442594
LO-REDUCTION     133 477.461183 477.442594
LO-REDUCTION     135 477.457167 477.442594
EXTENSION        137 477.456311 477.429887
LO-REDUCTION     139 477.448140 477.429887
LO-REDUCTION     141 477.445600 477.429887
EXTENSION        143 477.442594 477.410597
LO-REDUCTION     145 477.432656 477.410597
LO-REDUCTION     147 477.432527 477.410597
EXTENSION        149 477.429887 477.392977
LO-REDUCTION     151 477.419644 477.392977
EXTENSION        153 477.411056 477.370851
LO-REDUCTION     155 477.410597 477.370851
EXTENSION        157 477.393125 477.356665
LO-REDUCTION     159 477.392977 477.356665
EXTENSION        161 477.384415 477.340478
EXTENSION        163 477.370851 477.328610
LO-REDUCTION     165 477.367006 477.328610
LO-REDUCTION     167 477.356665 477.328610
LO-REDUCTION     169 477.343394 477.328610
REFLECTION       171 477.340478 477.327623
LO-REDUCTION     173 477.338392 477.327623
EXTENSION        175 477.335102 477.316244
LO-REDUCTION     177 477.333110 477.316244
EXTENSION        179 477.328610 477.315156
EXTENSION        181 477.327623 477.297605
LO-REDUCTION     183 477.320547 477.297605
LO-REDUCTION     185 477.316244 477.297605
LO-REDUCTION     187 477.315156 477.297605
EXTENSION        189 477.303700 477.269874
LO-REDUCTION     191 477.301646 477.269874
LO-REDUCTION     193 477.299419 477.269874
EXTENSION        195 477.297605 477.255876
EXTENSION        197 477.282615 477.230019
LO-REDUCTION     199 477.274271 477.230019
EXTENSION        201 477.269874 477.199711
LO-REDUCTION     203 477.255876 477.199711
LO-REDUCTION     205 477.233619 477.199711
REFLECTION       207 477.230019 477.197257
LO-REDUCTION     209 477.208884 477.195267
LO-REDUCTION     211 477.202120 477.193313
REFLECTION       213 477.199711 477.189386
HI-REDUCTION     215 477.197257 477.189386
LO-REDUCTION     217 477.195267 477.189386
LO-REDUCTION     219 477.193313 477.189375
HI-REDUCTION     221 477.192488 477.189375
EXTENSION        223 477.190662 477.186951
LO-REDUCTION     225 477.190145 477.186951
LO-REDUCTION     227 477.189386 477.186951
REFLECTION       229 477.189375 477.186325
LO-REDUCTION     231 477.187184 477.186325
LO-REDUCTION     233 477.187006 477.186251
HI-REDUCTION     235 477.186951 477.186251
REFLECTION       237 477.186602 477.185756
LO-REDUCTION     239 477.186325 477.185756
HI-REDUCTION     241 477.186313 477.185756
LO-REDUCTION     243 477.186251 477.185756
HI-REDUCTION     245 477.185922 477.185756
EXTENSION        247 477.185856 477.185563
LO-REDUCTION     249 477.185838 477.185563
LO-REDUCTION     251 477.185776 477.185563
LO-REDUCTION     253 477.185756 477.185563
LO-REDUCTION     255 477.185655 477.185559
REFLECTION       257 477.185630 477.185552
LO-REDUCTION     259 477.185609 477.185552
REFLECTION       261 477.185572 477.185522
LO-REDUCTION     263 477.185563 477.185522
REFLECTION       265 477.185559 477.185505
LO-REDUCTION     267 477.185552 477.185505
LO-REDUCTION     269 477.185523 477.185502
LO-REDUCTION     271 477.185522 477.185501
LO-REDUCTION     273 477.185512 477.185501
Exiting from Nelder Mead minimizer
    275 function evaluations used
> toc <- Sys.time()
> print(toc-tic)
Time difference of 21.88590 secs
> tic <- Sys.time()
> print(loglik.mle <- -kalm.fit1$value,digits=4)
[1] -477.2
> 
> cat("summary of results\n")
summary of results
> print(
+       cbind(
+             truth=c(p.truth[names(kalm.fit1$par)],loglik=loglik.truth),
+             MLE=c(kalm.fit1$par,loglik=loglik.mle),
+             SE=c(sqrt(diag(solve(kalm.fit1$hessian))),NA)
+             ),
+       digits=3
+       )
         truth      MLE     SE
alpha.1    0.8    0.685 0.0672
alpha.4    0.9    0.875 0.0359
x1.0      -3.0   -1.978 3.9679
x2.0       4.0    6.431 2.6395
loglik  -479.4 -477.185     NA
> 
