
R version 2.9.1 (2009-06-26)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Loading required package: deSolve
Loading required package: subplex
Loading required package: mvtnorm
> 
> data(ou2)
> 
> set.seed(64857673L)
> 
> fit1.pfilter <- pfilter(ou2,Np=1000)
> cat("coefficients at `truth'\n")
coefficients at `truth'
> print(coef(ou2,c('x1.0','x2.0','alpha.1','alpha.4')),digits=4)
   x1.0    x2.0 alpha.1 alpha.4 
  50.00  -50.00    0.90    0.99 
> cat("particle filter log likelihood at truth\n")
particle filter log likelihood at truth
> print(fit1.pfilter$loglik,digits=4)
[1] -412.9
> 
> p.truth <- coef(ou2)
> guess2 <- guess1 <- p.truth
> guess1[c('x1.0','x2.0','alpha.1','alpha.4')] <- c(45,-60,0.8,0.9)
> guess2[c('x1.0','x2.0','alpha.1','alpha.4')] <- c(60,-45,0.9,0.8)
> 
> mif1 <- mif(ou2,Nmif=10,start=guess1,
+             pars=c('alpha.1','alpha.4'),ivps=c('x1.0','x2.0'),
+             rw.sd=c(
+               x1.0=5,x2.0=5,
+               alpha.1=0.1,alpha.4=0.1
+               ),
+             Np=1000,
+             var.factor=1,
+             ic.lag=10,
+             cooling.factor=0.95,
+             max.fail=100
+             )
> 
> mif2 <- mif(ou2,Nmif=10,start=guess2,
+             pars=c('alpha.1','alpha.4'),ivps=c('x1.0','x2.0'),
+             rw.sd=c(
+               x1.0=5,x2.0=5,
+               alpha.1=0.1,alpha.4=0.1
+               ),
+             Np=1000,
+             var.factor=1,
+             ic.lag=10,
+             cooling.factor=0.95,
+             max.fail=100
+             )
> 
> pdf(file="ou2-mif.pdf")
> plot(mif1)
> compare.mif(mif2)
> try(compare.mif(mif1,mif2))
Error in compare.mif(mif1, mif2) : unused argument(s) (mif2)
> compare.mif(list(mif1,mif2))
> dev.off()
null device 
          1 
> 
> set.seed(33848585L)
> 
> try(
+     mif(
+         ou2,
+         Nmif=1,
+         pars=c("alpha.1","alpha.4","x1.0"),
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0.1,alpha.4=0.2,alpha.3=0),
+         Np=100,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'pars' and 'ivps' must be mutually disjoint subsets of 'names(start)' and must have a positive random-walk SDs specified in 'rw.sd'
> 
> try(
+     mif(
+         ou2,
+         Nmif=1,
+         pars=c("alpha.1","alpha.4"),
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0,alpha.4=0.2,alpha.3=0),
+         Np=100,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'pars' and 'ivps' must be mutually disjoint subsets of 'names(start)' and must have a positive random-walk SDs specified in 'rw.sd'
> 
> try(
+     mif(
+         ou2,
+         Nmif=1,
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(alpha.1=0.1,alpha.4=0.2,alpha.3=0),
+         Np=100,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'pars' and 'ivps' must be mutually disjoint subsets of 'names(start)' and must have a positive random-walk SDs specified in 'rw.sd'
> 
> try(
+     mif(
+         ou2,
+         Nmif=1,
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0.1,alpha.4=0.2,alpha.3=0),
+         Np=100,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'cooling.factor' must be specified
> 
> try(
+     mif(
+         ou2,
+         Nmif=1,
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0,alpha.4=0.2,alpha.3=0),
+         Np=-10,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'Np' must be a positive integer
> 
> try(
+     mif(
+         ou2,
+         Nmif=-3,
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0,alpha.4=0.2,alpha.3=0),
+         Np=11.6,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : mif error: 'Nmif' must be a positive integer
> 
> try(
+     mif(
+         ou2,
+         Nmif=2,
+         start=c(alpha.1=0.9,alpha.2=0,alpha.3=0,alpha.4=-Inf,sigma.1=1,sigma.2=0,sigma.3=2,tau=1,x1.0=50,x2.0=-50),
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0,alpha.4=0.2,alpha.3=0),
+         Np=11,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : 'mif' error: cannot estimate non-finite parameters: alpha.4
> 
> try(
+     mif(
+         ou2,
+         Nmif=2,
+         start=c(alpha.1=0.9,alpha.2=0,alpha.3=0,alpha.4=0.99,sigma.1=1,sigma.2=0,sigma.3=2,tau=1,x1.0=50,x2.0=NaN),
+         ivps=c("x1.0","x2.0"),
+         rw.sd=c(x1.0=5,x2.0=5,alpha.1=0,alpha.4=0.2,alpha.3=0),
+         Np=11,cooling.factor=0.95,ic.lag=10,var.factor=1
+         )
+     )
Error : 'mif' error: cannot estimate non-finite parameters: x2.0
> 
> fit <- mif(
+            ou2,
+            Nmif=0,
+            pars=c("alpha.1","alpha.4"),
+            ivps=c("x1.0","x2.0"),
+            rw.sd=c(x1.0=5,x2.0=5,alpha.1=0.1,alpha.4=0.2,alpha.3=0),
+            Np=100,cooling.factor=0.95,ic.lag=10,var.factor=1
+            )
> fit <- mif(
+            fit,
+            Nmif=2,
+            ivps=c("x1.0","x2.0"),
+            rw.sd=c(x1.0=5,x2.0=5,alpha.1=0.1,alpha.4=0.2),
+            Np=1000,cooling.factor=0.95,ic.lag=10,var.factor=1
+            )
> fit <- continue(fit)
> fit <- continue(fit,Nmif=2)
> ff <- pfilter(fit,pred.mean=T,filter.mean=T,pred.var=T,max.fail=100)
filtering failure at time t = 3
filtering failure at time t = 4
filtering failure at time t = 5
filtering failure at time t = 6
filtering failure at time t = 7
filtering failure at time t = 8
filtering failure at time t = 9
filtering failure at time t = 10
filtering failure at time t = 11
> fit <- mif(fit,rw.sd=c(x1.0=5,x2.0=5,alpha.1=0.1,alpha.4=0.1))
> fit <- continue(fit,Nmif=2,ivps=c("x1.0"),pars=c("alpha.1"))
Warning message:
mif warning: the variable(s) alpha.4, x2.0 have positive random-walk SDs specified, but are included in neither 'pars' nor 'ivps'. These random walk SDs are ignored. 
> s <- coef(fit)
> s[2] <- 0.01
> fit <- mif(fit,Nmif=3,start=s)
> fit <- mif(ou2,Nmif=3,rw.sd=c(alpha.1=0.1,alpha.4=0.1),Np=1000,cooling.factor=0.98,var.factor=1,ic.lag=2)
> fit <- continue(fit,Nmif=2,Np=2000)
> fit <- continue(fit,ivps=c("x1.0"),rw.sd=c(alpha.1=0.1,alpha.4=0.1,x1.0=5,x2.0=5),Nmif=2)
Warning message:
mif warning: the variable(s) x2.0 have positive random-walk SDs specified, but are included in neither 'pars' nor 'ivps'. These random walk SDs are ignored. 
> 
