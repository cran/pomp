
R version 3.2.4 Revised (2016-03-16 r70336) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> set.seed(1066L)
> 
> pdf(file="ou2-probe.pdf")
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> pm.ou2 <- probe(
+                 ou2,
+                 probes=list(
+                   y1.mean=probe.mean(var="y1"),
+                   y2.mean=probe.mean(var="y2"),
+                   y1.sd=probe.sd(var="y1"),
+                   y2.sd=probe.sd(var="y2")
+                   ),
+                 nsim=500
+                 )
> 
> pm.po <- probe(
+                ou2,
+                params=c(
+                  alpha.1=0.1,alpha.2=-0.5,alpha.3=0.3,alpha.4=0.2,
+                  sigma.1=3,sigma.2=-0.5,sigma.3=2,
+                  tau=1,
+                  x1.0=0,x2.0=0
+                  ),
+                probes=list(
+                  y1.mean=probe.mean(var="y1"),
+                  y2.mean=probe.mean(var="y2"),
+                  y1.sd=probe.sd(var="y1"),
+                  y2.sd=probe.sd(var="y2")
+                  ),
+                nsim=500
+                )
> 
> invisible(summary(pm.ou2))
> invisible(summary(pm.po))
> 
> plot(pm.ou2)
> plot(pm.po)
> 
> pm.ou2 <- probe(
+                 ou2,
+                 probes=list(
+                   y1acf=probe.acf(var="y1",lags=c(0,1,2),type="corr"),
+                   y2acf=probe.acf(var=c("y2"),lags=c(0,1,2)),
+                   y12ccf=probe.ccf(var=c("y2","y1"),lags=c(3,8))
+                   ),
+                 nsim=500
+                 )
Warning message:
In probe.acf(var = "y1", lags = c(0, 1, 2), type = "corr") :
  useless zero lag discarded in 'probe.acf'
> plot(pm.ou2)
> 
> pb <- probe(
+             ou2,
+             probes=list(
+               y1=probe.quantile(var="y1",prob=seq(0.1,0.9,by=0.1)),
+               probe.acf(var=c("y1","y2"),lags=c(0,1,4,7),transform=identity),
+               pd=probe.period(var="y1",kernel.width=3)
+               ),
+             nsim=200
+             )
> plot(pb)
> 
> po <- ou2
> coef(po,c("alpha.2","alpha.3")) <- c(0,0)
> coef(po,c("sigma.2","sigma.1","sigma.3")) <- c(0,0.0,0.0)
> coef(po,c("tau")) <- c(0.0)
> po <- simulate(po)
> pb <- probe(
+             po,
+             probes=list(
+               probe.acf(var=c("y1","y2"),lags=c(0,1),type="cor"),
+               probe.nlar("y1",lags=1,powers=1),
+               probe.nlar("y2",lags=1,powers=1)
+               ),
+             nsim=1000,
+             seed=1066L
+             )
Warning message:
In probe.acf(var = c("y1", "y2"), lags = c(0, 1), type = "cor") :
  useless zero lag discarded in 'probe.acf'
> x <- as.data.frame(po)
> mx <- sapply(x,mean)
> x <- sweep(x,2,mx)
> y1 <- head(x$y1,-1)
> z1 <- tail(x$y1,-1)
> y2 <- head(x$y2,-1)
> z2 <- tail(x$y2,-1)
> small.diff <- pb$datvals-c(mean(y1*z1)/mean(x$y1^2),mean(y2*z2)/mean(x$y2^2),mean(y1*z1)/mean(y1*y1),mean(y2*z2)/mean(y2*y2))
> stopifnot(max(abs(small.diff))<.Machine$double.eps*100)
> 
> po <- simulate(ou2)
> pb <- probe(
+             po,
+             probes=list(
+               probe.acf(var=c("y1"),lags=c(0,1,2),type="cov"),
+               probe.ccf(vars=c("y1","y1"),lags=c(0,1,2),type="cov")
+               ),
+             nsim=1000,
+             seed=1066L
+             )
> plot(pb)
> 
> pb <- probe(
+             po,
+             probes=probe.ccf(vars=c("y1","y2"),lags=c(-5,-3,1,4,8)),
+             nsim=1000,
+             seed=1066L
+             )
> plot(pb)
> 
> pb <- probe(
+             po,
+             probes=probe.ccf(vars=c("y1","y2"),lags=c(-5,-3,1,4,8),type="corr"),
+             nsim=1000,
+             seed=1066L
+             )
> plot(pb)
> 
> head(as(pb,"data.frame"))
         ccf.-5    ccf.-3      ccf.1      ccf.4       ccf.8
data  0.6340061 0.8339776 -0.3925899 -0.7963667  0.30162854
sim.1 0.4727712 0.8457682 -0.3980453 -0.7878552  0.42505373
sim.2 0.6416744 0.8419569 -0.3851185 -0.7798302  0.25492015
sim.3 0.6419382 0.8434833 -0.3211908 -0.7538791  0.15241925
sim.4 0.3693204 0.5205152 -0.4305519 -0.5773910 -0.04953301
sim.5 0.5542739 0.6216561 -0.4089672 -0.7236761  0.06850115
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> good <- probe(
+               ou2,
+               probes=list(
+                 y1.mean=probe.mean(var="y1"),
+                 y2.mean=probe.mean(var="y2"),
+                 y1.sd=probe.sd(var="y1"),
+                 y2.sd=probe.sd(var="y2"),
+                 extra=function(x)max(x["y1",])
+                 ),
+               nsim=500
+               )
> 
> ofun <- probe.match.objfun(ou2,est=c("alpha.1","alpha.2"),
+                            probes=good$probes,nsim=100,
+                            seed=349956868L
+                            )
> 
> library(nloptr)
> fit1 <- nloptr(
+                coef(good,c("alpha.1","alpha.2")),
+                ofun,
+                opts=list(
+                  algorithm="NLOPT_LN_SBPLX",
+                  xtol_rel=1e-10,
+                  maxeval=1000
+                  )
+                )
> fit2 <- probe.match(
+                     good,
+                     est=c("alpha.1","alpha.2"),
+                     nsim=100,
+                     algorithm="NLOPT_LN_SBPLX",
+                     xtol_rel=1e-10,
+                     maxeval=1000,
+                     seed=349956868L
+                     )
> 
> all.equal(fit1$solution,unname(coef(fit2,fit2$est)))
[1] TRUE
> 
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  6.256   0.032   6.278 
