
R version 2.8.1 (2008-12-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Loading required package: deSolve
Loading required package: subplex
> 
> tbasis <- seq(0,25,by=1/52)
> basis <- periodic.bspline.basis(tbasis,nbasis=3)
> colnames(basis) <- paste("seas",1:3,sep='')
> 
> ## some parameters
> params <- c(
+             gamma=26,mu=0.02,iota=0.01,
+             beta1=1200,beta2=1800,beta3=600,
+             beta.sd=1e-3,
+             pop=2.1e6,
+             rho=0.6,
+             S.0=26/1200,I.0=0.001,R.0=1-0.001-26/1200
+             )
> 
> ## set up the pomp object
> ## the C codes "sir_euler_simulator" and "sir_euler_density" are included in the "examples" directory (file "sir.c")
> po <- pomp(
+            times=1/52*seq.int(length=4*52),
+            data=rbind(measles=numeric(52*4)),
+            t0=0,
+            tcovar=tbasis,
+            covar=basis,
+            delta.t=1/52/20,
+            zeronames=c("cases"),
+            step.fun=function(t,x,params,covars,delta.t,...) {
+              params <- exp(params)
+              with(
+                   as.list(c(x,params)),
+                   {
+                     beta <- exp(sum(log(c(beta1,beta2,beta3))*covars))
+                     beta.var <- beta.sd^2
+                     dW <- rgamma(n=1,shape=delta.t/beta.var,scale=beta.var)
+                     foi <- (iota+beta*I*dW/delta.t)/pop
+                     trans <- c(
+                                rpois(n=1,lambda=mu*pop*delta.t),
+                                reulermultinom(n=1,size=S,rate=c(foi,mu),dt=delta.t),
+                                reulermultinom(n=1,size=I,rate=c(gamma,mu),dt=delta.t),
+                                reulermultinom(n=1,size=R,rate=c(mu),dt=delta.t)
+                                )
+                     c(
+                       S=S+trans[1]-trans[2]-trans[3],
+                       I=I+trans[2]-trans[4]-trans[5],
+                       R=R+trans[4]-trans[6],
+                       cases=cases+trans[4],
+                       W=if (beta.sd>0) W+(dW-delta.t)/beta.sd else W,
+                       B=trans[1],
+                       SI=trans[2],
+                       SD=trans[3],
+                       IR=trans[4],
+                       ID=trans[5],
+                       RD=trans[6],
+                       dW=dW
+                       )
+                   }
+                   )
+            },
+            dens.fun=function(t1,t2,params,x1,x2,covars,...) {
+              params <- exp(params)
+              with(
+                   as.list(params),
+                   {
+                     dt <- t2-t1
+                     beta <- exp(sum(log(c(beta1,beta2,beta3))*covars))
+                     beta.var <- beta.sd^2
+                     dW <- x2['dW']
+                     foi <- (iota+beta*x1["I"]*dW/dt)/pop
+                     probs <- c(
+                                dpois(x=x2["B"],lambda=mu*pop*dt,log=T),
+                                deulermultinom(x=x2[c("SI","SD")],size=x1["S"],rate=c(foi,mu),dt=dt,log=T),
+                                deulermultinom(x=x2[c("IR","ID")],size=x1["I"],rate=c(gamma,mu),dt=dt,log=T),
+                                deulermultinom(x=x2["RD"],size=x1["R"],rate=c(mu),dt=dt,log=T),
+                                dgamma(x=dW,shape=dt/beta.var,scale=beta.var,log=T)
+                                )
+                     sum(probs)
+                   }
+                   )
+            },
+            skeleton.vectorfield=function(x,t,params,covars,...) {
+              xdot <- rep(0,length(x))
+              params <- exp(params)
+              with(
+                   as.list(c(x,params)),
+                   {
+                     beta <- exp(sum(log(c(beta1,beta2,beta3))*covars))
+                     foi <- (iota+beta*I)/pop
+                     terms <- c(
+                                mu*pop,
+                                foi*S,
+                                mu*S,
+                                gamma*I,
+                                mu*I,
+                                mu*R
+                                )
+                     xdot[1:4] <- c(
+                                    terms[1]-terms[2]-terms[3],
+                                    terms[2]-terms[4]-terms[5],
+                                    terms[4]-terms[6],
+                                    terms[4]
+                                    )
+                     xdot
+                   }
+                   )
+            },
+            rprocess=euler.simulate,
+            dprocess=euler.density,
+            measurement.model=measles~binom(size=cases,prob=exp(rho)),
+            initializer=function(params,t0,...){
+              p <- exp(params)
+              with(
+                   as.list(p),
+                   {
+                     fracs <- c(S.0,I.0,R.0)
+                     x0 <- c(
+                             round(pop*fracs/sum(fracs)), # make sure the three compartments sum to 'pop' initially
+                             rep(0,9)	# zeros for 'cases', 'W', and the transition numbers
+                             )
+                     names(x0) <- c("S","I","R","cases","W","B","SI","SD","IR","ID","RD","dW")
+                     x0
+                   }
+                   )
+            }
+            )
> 
> set.seed(3049953)
> ## simulate from the model
> tic <- Sys.time()
> x <- simulate(po,params=log(params),nsim=3)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 2.595228 secs
> 
> pdf(file='sir.pdf')
> 
> plot(x[[1]],variables=c("S","I","R","cases","W"))
> 
> t1 <- seq(0,4/52,by=1/52/25)
> X1 <- simulate(po,params=log(params),nsim=10,states=TRUE,obs=TRUE,times=t1)
> 
> t2 <- seq(0,2,by=1/52)
> X2 <- simulate(po,params=log(params),nsim=1,states=TRUE,obs=TRUE,times=t2)
> 
> t3 <- seq(0,20,by=1/52)
> tic <- Sys.time()
> X3 <- trajectory(po,params=log(params),times=t3,hmax=1/52)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 5.991744 secs
> plot(t3,X3['I',1,],type='l')
> 
> f1 <- dprocess(
+                po,
+                x=X1$states[,,31:40],
+                times=t1[31:40],
+                params=matrix(
+                  log(params),
+                  nrow=length(params),
+                  ncol=10,
+                  dimnames=list(names(params),NULL)
+                  ),
+                log=TRUE
+                )
> print(apply(f1,1,sum),digits=4)
 [1] -51.57 -43.19 -50.14 -39.65 -41.63 -49.34 -39.60 -48.19 -42.60 -48.26
> 
> g1 <- dmeasure(
+                po,
+                y=rbind(measles=X1$obs[,7,]),
+                x=X1$states,
+                times=t1,
+                params=matrix(
+                  log(params),
+                  nrow=length(params),
+                  ncol=10,
+                  dimnames=list(names(params),NULL)
+                  ),
+                log=TRUE
+                )
> print(apply(g1,1,sum),digits=4)
 [1]   -Inf   -Inf   -Inf   -Inf   -Inf   -Inf -263.6 -408.1   -Inf -468.1
> 
> h1 <- skeleton(
+                po,
+                x=X2$states[,1,55:70,drop=FALSE],
+                t=t2[55:70],
+                params=as.matrix(log(params))
+                )
> print(h1[c("S","I","R"),,],digits=4)
      [,1]     [,2]     [,3]     [,4]     [,5]   [,6]   [,7]   [,8]   [,9]
S  39362.0  39111.6  39195.1  38583.3  38374.5  36367  34769  33057  29765
I    272.3    376.1    407.8    615.6    731.6   1423   2046   2755   4083
R -39640.5 -39495.0 -39609.9 -39205.0 -39112.3 -37796 -36819 -35816 -33852
   [,10]  [,11]  [,12]    [,13]  [,14]  [,15]  [,16]
S  24577  17622  11393    319.5 -14707 -33518 -57305
I   6165   8975  11503  15834.2  21418  27852  34849
R -30746 -26601 -22900 -16156.5  -6714   5662  22453
> 
> po <- pomp(
+            times=seq(1/52,4,by=1/52),
+            data=rbind(measles=numeric(52*4)),
+            t0=0,
+            tcovar=tbasis,
+            covar=basis,
+            delta.t=1/52/20,
+            statenames=c("S","I","R","cases","W","B","dW"),
+            paramnames=c("gamma","mu","iota","beta1","beta.sd","pop"),
+            covarnames=c("seas1"),
+            zeronames=c("cases"),
+            step.fun="sir_euler_simulator",
+            rprocess=euler.simulate,
+            dens.fun="sir_euler_density",
+            dprocess=euler.density,
+            skeleton.vectorfield="sir_ODE",
+            PACKAGE="pomp",
+            measurement.model=measles~binom(size=cases,prob=exp(rho)),
+            initializer=function(params,t0,...){
+              p <- exp(params)
+              with(
+                   as.list(p),
+                   {
+                     fracs <- c(S.0,I.0,R.0)
+                     x0 <- c(
+                             round(pop*fracs/sum(fracs)), # make sure the three compartments sum to 'pop' initially
+                             rep(0,9)	# zeros for 'cases', 'W', and the transition numbers
+                             )
+                     names(x0) <- c("S","I","R","cases","W","B","SI","SD","IR","ID","RD","dW")
+                     x0
+                   }
+                   )
+            }
+            )
> 
> set.seed(3049953)
> ## simulate from the model
> tic <- Sys.time()
> x <- simulate(po,params=log(params),nsim=3)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 0.2616198 secs
> plot(x[[1]],variables=c("S","I","R","cases","W"))
> 
> t3 <- seq(0,20,by=1/52)
> tic <- Sys.time()
> X4 <- trajectory(po,params=log(params),times=t3,hmax=1/52)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 4.824738 secs
> plot(t3,X4['I',1,],type='l')
> 
> f2 <- dprocess(
+                po,
+                x=X1$states[,,31:40],
+                times=t1[31:40],
+                params=matrix(
+                  log(params),
+                  nrow=length(params),
+                  ncol=10,
+                  dimnames=list(names(params),NULL)
+                  ),
+                log=TRUE
+                )
> print(apply(f2,1,sum),digits=4)
 [1] -51.57 -43.19 -50.14 -39.65 -41.63 -49.34 -39.60 -48.19 -42.60 -48.26
> 
> g2 <- dmeasure(
+                po,
+                y=rbind(measles=X1$obs[,7,]),
+                x=X1$states,
+                times=t1,
+                params=matrix(
+                  log(params),
+                  nrow=length(params),
+                  ncol=10,
+                  dimnames=list(names(params),NULL)
+                  ),
+                log=TRUE
+                )
> print(apply(g2,1,sum),digits=4)
 [1]   -Inf   -Inf   -Inf   -Inf   -Inf   -Inf -263.6 -408.1   -Inf -468.1
> 
> h2 <- skeleton(
+                po,
+                x=X2$states[,1,55:70,drop=FALSE],
+                t=t2[55:70],
+                params=as.matrix(log(params))
+                )
> print(h2[c("S","I","R"),,],digits=4)
      [,1]     [,2]     [,3]     [,4]     [,5]   [,6]   [,7]   [,8]   [,9]
S  39362.0  39111.6  39195.1  38583.3  38374.5  36367  34769  33057  29765
I    272.3    376.1    407.8    615.6    731.6   1423   2046   2755   4083
R -39640.5 -39495.0 -39609.9 -39205.0 -39112.3 -37796 -36819 -35816 -33852
   [,10]  [,11]  [,12]    [,13]  [,14]  [,15]  [,16]
S  24577  17622  11393    319.5 -14707 -33518 -57305
I   6165   8975  11503  15834.2  21418  27852  34849
R -30746 -26601 -22900 -16156.5  -6714   5662  22453
> 
> print(max(abs(f2-f1),na.rm=T),digits=4)
[1] 8.882e-15
> print(max(abs(g2-g1),na.rm=T),digits=4)
[1] 0
> print(max(abs(h2-h1),na.rm=T),digits=4)
[1] 8.731e-11
> 
> dev.off()
null device 
          1 
> 
