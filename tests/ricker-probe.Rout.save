
R version 2.12.2 (2011-02-25)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Loading required package: mvtnorm
Loading required package: subplex
Loading required package: deSolve
> 
> data(ricker)
> 
> pdf(file="ricker-probe.pdf")
> 
> set.seed(6457673L)
> z <- as.numeric(data.array(ricker))
> 
> po <- ricker
> 
> pb <- probe(
+             po,
+             probes=probe.median("y"),
+             nsim=1000,
+             seed=838775L
+             )
> plot(pb)
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
[1] 0.782

$pvals
[1] 0.3496503

$synth.loglik
[1] -2.437844

> 
> pb <- probe(
+             po,
+             probes=probe.nlar("y",lags=c(1,2,3),powers=c(1,1,1),transform="sqrt"),
+             nsim=1000,
+             seed=838775L
+             )
> plot(pb)
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
nlar.1^1 nlar.2^1 nlar.3^1 
   0.166    0.251    0.803 

$pvals
 nlar.1^1  nlar.2^1  nlar.3^1 
0.3336663 0.5034965 0.3956044 

$synth.loglik
[1] 2.805501

> 
> pb <- probe(
+             po,
+             probes=probe.nlar("y",lags=c(1,2,3),powers=1,transform="sqrt"),
+             nsim=1000,
+             seed=838775L
+             )
> plot(pb)
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
nlar.1^1 nlar.2^1 nlar.3^1 
   0.166    0.251    0.803 

$pvals
 nlar.1^1  nlar.2^1  nlar.3^1 
0.3336663 0.5034965 0.3956044 

$synth.loglik
[1] 2.805501

> 
> pb <- probe(
+             po,
+             probes=probe.nlar("y",lags=1,powers=c(1,2,3),transform="sqrt"),
+             nsim=1000,
+             seed=838775L
+             )
> plot(pb)
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
nlar.1^1 nlar.1^2 nlar.1^3 
   0.403    0.805    0.323 

$pvals
 nlar.1^1  nlar.1^2  nlar.1^3 
0.8071928 0.3916084 0.6473526 

$synth.loglik
[1] 7.383561

> 
> pb <- probe(
+             po,
+             probes=probe.marginal(
+               var="y",
+               transform=sqrt,
+               ref=z,
+               diff=1,
+               order=3
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
       marg.1        marg.2        marg.3 
 1.000000e+00 -3.470661e-18 -1.108330e-18 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
marg.1 marg.2 marg.3 
 0.855  0.284  0.275 

$pvals
   marg.1    marg.2    marg.3 
0.2917083 0.5694306 0.5514486 

$synth.loglik
[1] 12.42156

> plot(pb)
> 
> pb <- probe(
+             po,
+             probes=list(
+               probe.marginal(
+                                var="y",
+                                transform=sqrt,
+                                ref=z,
+                                diff=1,
+                                order=3
+                                ),
+               probe.acf(
+                         var="y",
+                         lags=c(0,1,3,5)
+                         ),
+               mean=probe.mean(var="y",transform=sqrt)
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
       marg.1        marg.2        marg.3       acf.0.y       acf.1.y 
 1.000000e+00 -3.470661e-18 -1.108330e-18  3.679493e+03 -1.275470e+03 
      acf.3.y       acf.5.y          mean 
 4.212841e+02  2.954671e+02  4.430440e+00 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
 marg.1  marg.2  marg.3 acf.0.y acf.1.y acf.3.y acf.5.y    mean 
  0.855   0.284   0.275   0.647   0.034   0.920   0.686   0.838 

$pvals
    marg.1     marg.2     marg.3    acf.0.y    acf.1.y    acf.3.y    acf.5.y 
0.29170829 0.56943057 0.55144855 0.70729271 0.06993007 0.16183816 0.62937063 
      mean 
0.32567433 

$synth.loglik
[1] -14.89908

> plot(pb)
> 
> pbm <- probe.match(pb,eval.only=TRUE)
> plot(pbm)
> summary(pbm)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
 marg.1  marg.2  marg.3 acf.0.y acf.1.y acf.3.y acf.5.y    mean 
  0.857   0.281   0.276   0.648   0.035   0.899   0.708   0.830 

$pvals
    marg.1     marg.2     marg.3    acf.0.y    acf.1.y    acf.3.y    acf.5.y 
0.28771229 0.56343656 0.55344655 0.70529471 0.07192807 0.20379620 0.58541459 
      mean 
0.34165834 

$synth.loglik
[1] -14.77430

$est
character(0)

$weights
[1] 1

$value
[1] 15.31774

$eval
[1] 1 0

$convergence
[1] NA

$msg
[1] "no optimization performed"

> 
> coef(po) <- c(log.r=log(10),log.sigma=log(0.3),log.phi=log(20),N.0=5,e.0=0)
> 
> pb <- probe(
+             po,
+             probes=probe.marginal(
+               var="y",
+               transform=sqrt,
+               ref=z,
+               diff=1,
+               order=3
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
       marg.1        marg.2        marg.3 
 1.000000e+00 -3.470661e-18 -1.108330e-18 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 2.302585 -1.203973  2.995732  5.000000  0.000000 

$nsim
[1] 1000

$quantiles
marg.1 marg.2 marg.3 
 1.000  0.115  0.218 

$pvals
     marg.1      marg.2      marg.3 
0.001998002 0.231768232 0.437562438 

$synth.loglik
[1] -19.71994

> plot(pb)
> 
> system.time(
+             pm <- probe.match(
+                               pb,
+                               est=c("log.r","log.phi","N.0"),
+                               parscale=c(0.1,0.1,0.1),
+                               nsim=1000,
+                               seed=838775L,
+                               method="Nelder-Mead",
+                               reltol=1e-7,
+                               fail.value=1e9
+                               )
+             )
   user  system elapsed 
 13.888   0.047  13.965 
> plot(pm)
> 
> cbind(truth=coef(ricker),est=coef(pm),guess=coef(po))
              truth       est     guess
log.r      3.800000  2.786419  2.302585
log.sigma -1.203973 -1.203973 -1.203973
log.phi    2.302585  3.381907  2.995732
N.0        7.000000  4.427796  5.000000
e.0        0.000000  0.000000  0.000000
> 
> pb <- probe(
+             po,
+             probes=probe.nlar(
+               var="y",
+               transform=sqrt,
+               lags=1,
+               powers=c(1,2,3)
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
   nlar.1^1    nlar.1^2    nlar.1^3 
-0.50800036 -0.12068721  0.01214788 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 2.302585 -1.203973  2.995732  5.000000  0.000000 

$nsim
[1] 1000

$quantiles
nlar.1^1 nlar.1^2 nlar.1^3 
   0.999    0.078    0.065 

$pvals
   nlar.1^1    nlar.1^2    nlar.1^3 
0.003996004 0.157842158 0.131868132 

$synth.loglik
[1] -5.862151

> plot(pb)
> 
> system.time(
+             pm <- probe.match(
+                               pb,
+                               est=c("log.r","log.phi","N.0"),
+                               parscale=c(0.1,0.1,0.1),
+                               nsim=1000,
+                               seed=838775L,
+                               method="Nelder-Mead",
+                               reltol=1e-7,
+                               fail.value=1e9
+                               )
+             )
   user  system elapsed 
 10.304   0.041  10.366 
> plot(pm)
> plot(as(pm,"pomp"),variables="y")
> plot(simulate(pm),variables="y")
> 
> cbind(truth=coef(ricker),est=coef(pm),guess=coef(po))
              truth       est     guess
log.r      3.800000  1.664998  2.302585
log.sigma -1.203973 -1.203973 -1.203973
log.phi    2.302585  3.566425  2.995732
N.0        7.000000  6.731655  5.000000
e.0        0.000000  0.000000  0.000000
> 
> pb <- probe(
+             po,
+             probes=probe.marginal(
+               var="y",
+               transform=sqrt,
+               ref=runif(length(time(ricker))),
+               diff=2,
+               order=3
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
   marg.1    marg.2    marg.3 
24.879460 -5.950185 -2.211594 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 2.302585 -1.203973  2.995732  5.000000  0.000000 

$nsim
[1] 1000

$quantiles
marg.1 marg.2 marg.3 
  1.00   0.00   0.32 

$pvals
     marg.1      marg.2      marg.3 
0.001998002 0.001998002 0.641358641 

$synth.loglik
[1] -56.62876

> plot(pb)
> 
> pb <- probe(
+             ricker,
+             probes=probe.acf(
+               var="y",
+               transform=sqrt,
+               lags=seq.int(from=0,to=5),
+               type="cov"
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
  acf.0.y   acf.1.y   acf.2.y   acf.3.y   acf.4.y   acf.5.y 
21.763354 -7.220449 -4.970518  3.099575 -2.823081  1.507337 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
acf.0.y acf.1.y acf.2.y acf.3.y acf.4.y acf.5.y 
  0.592   0.067   0.315   0.907   0.144   0.658 

$pvals
  acf.0.y   acf.1.y   acf.2.y   acf.3.y   acf.4.y   acf.5.y 
0.8171828 0.1358641 0.6313686 0.1878122 0.2897103 0.6853147 

$synth.loglik
[1] -12.45474

> plot(pb)
> 
> pb <- probe(
+             ricker,
+             probes=probe.acf(
+               var="y",
+               transform=sqrt,
+               lags=seq.int(from=1,to=5),
+               type="cor"
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
    acf.1.y     acf.2.y     acf.3.y     acf.4.y     acf.5.y 
-0.33177095 -0.22838933  0.14242173 -0.12971720  0.06926033 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
acf.1.y acf.2.y acf.3.y acf.4.y acf.5.y 
  0.152   0.317   0.896   0.143   0.653 

$pvals
  acf.1.y   acf.2.y   acf.3.y   acf.4.y   acf.5.y 
0.3056943 0.6353646 0.2097902 0.2877123 0.6953047 

$synth.loglik
[1] 5.174849

> plot(pb)
> 
> pb <- probe(
+             ricker,
+             probes=list(
+               v=probe.var("y",transform=sqrt),
+               probe.acf(
+                         var="y",
+                         transform=sqrt,
+                         lags=c(0,1,2),
+                         type="cov"
+                         ),
+               probe.nlar(
+                          var="y",
+                          transform=sqrt,
+                          lags=c(1,2),
+                          powers=1
+                          )
+               ),
+             nsim=1000,
+             seed=838775L
+             )
> pb@datvals
         v    acf.0.y    acf.1.y    acf.2.y   nlar.1^1   nlar.2^1 
22.1986212 21.7633541 -7.2204486 -4.9705179 -0.4637368 -0.3923487 
> summary(pb)
$coef
    log.r log.sigma   log.phi       N.0       e.0 
 3.800000 -1.203973  2.302585  7.000000  0.000000 

$nsim
[1] 1000

$quantiles
       v  acf.0.y  acf.1.y  acf.2.y nlar.1^1 nlar.2^1 
   0.592    0.592    0.067    0.315    0.105    0.133 

$pvals
        v   acf.0.y   acf.1.y   acf.2.y  nlar.1^1  nlar.2^1 
0.8171828 0.8171828 0.1358641 0.6313686 0.2117882 0.2677323 

$synth.loglik
[1] 30.22958

> plot(pb)
> 
> try(
+     probe(
+           ricker,
+           probes=list(
+             mn=probe.mean("y",transform=sqrt,trim=0.1),
+             md=probe.median("y",na.rm=FALSE),
+             wacko=function(y)y[sample.int(n=length(y),size=sample.int(n=3,size=1))]
+             ),
+           nsim=100,
+           seed=838775L
+           )
+     )
Error in .local(object, probes, ...) : 
  variable-sized results returned by probe 2
> 
> try(
+     probe(
+           ricker,
+           probes=list(
+             mn=probe.mean("y",transform=sqrt,trim=0.1),
+             md=function(y)median(as.numeric(y)),
+             wacko=function(y) if (y[1]==68) 1 else c(1,2)
+             ),
+           nsim=100,
+           seed=838775L
+           )
+     )
Error in .local(object, probes, ...) : 
  probes return different number of values on different datasets
> 
> 
> try(
+     probe(
+           ricker,
+           probes=list(
+             mn=probe.mean("y",transform=sqrt,trim=0.1),
+             md=function(y)median(as.numeric(y)),
+             wacko=function(y) if (y[28]==107) c(1,2) else 1
+             ),
+           nsim=20,
+           seed=838775L
+           )
+     )
Error in .local(object, probes, ...) : 
  probes return different number of values on different datasets
> 
> dev.off()
null device 
          1 
> 
