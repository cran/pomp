
R version 2.14.2 (2012-02-29)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Loading required package: mvtnorm
Loading required package: subplex
Loading required package: deSolve
> 
> data(ou2)
> 
> po <- window(ou2,end=10)
> 
> set.seed(3434388L)
> 
> pmat <- parmat(coef(po),3)
> sims <- simulate(po,states=T,obs=T,params=pmat)
> 
> dp <- dprocess(po,x=sims$states,times=time(po),params=pmat,log=T)
> dm <- dmeasure(po,x=sims$states,y=obs(po),times=time(po),params=pmat,log=T)
> 
> apply(dp,1,sum)
[1] -47.20607 -37.35755 -46.26917
> apply(dm,1,sum)
[1] -850.6711 -616.1925 -993.1957
> 
> dp1 <- dprocess(po,x=sims$states,times=time(po),params=coef(po),log=T)
> dm1 <- dmeasure(po,x=sims$states,y=obs(po),times=time(po),params=coef(po),log=T)
> stopifnot(identical(dp,dp1))
> stopifnot(identical(dm,dm1))
> 
> x <- simulate(po,states=T,params=coef(po))
> dp2 <- dprocess(po,x=x,times=time(po),params=coef(po),log=T)
> dp3 <- dprocess(po,x=x,times=time(po),params=pmat,log=T)
> stopifnot(identical(rbind(dp2,dp2,dp2),dp3))
> 
> dm2 <- dmeasure(po,x=x,y=obs(po),times=time(po),params=coef(po),log=T)
> dm3 <- dmeasure(po,x=x,y=obs(po),times=time(po),params=pmat,log=T)
> stopifnot(identical(rbind(dm2,dm2,dm2),dm3))
> 
