
R version 3.2.4 Revised (2016-03-16 r70336) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> library(reshape2)
> library(plyr)
> library(magrittr)
> 
> set.seed(1178744046L)
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> dprior.ou2 <- function (params, log, ...) {
+   f <- sum(dunif(params,min=coef(ou2)-1,max=coef(ou2)+1,log=TRUE))
+   if (log) f else exp(f)
+ }
> 
> pdf(file="ou2-pmcmc.pdf")
> 
> pmcmc(
+       pomp(ou2,dprior=dprior.ou2),
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.001,alpha.3=0.001)),
+       Np=100,
+       verbose=FALSE
+       ) %>%
+   continue(Nmcmc=20) -> f1
> f1 %>% plot()
> 
> f1 %>% pfilter() %>%
+ pmcmc(
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.01,alpha.3=0.01)),
+       max.fail=100, 
+       verbose=FALSE
+       ) -> f2
> 
> f2 %>% pmcmc() -> f3
> f3 %>% continue(Nmcmc=20) -> f4
> 
> plot(c(f2,f3))
> 
> try(ff <- c(f3,f4))
Error in validObject(.Object) : 
  invalid class "pmcmcList" object: error in 'c': to be combined, 'pmcmc' objects must have chains of equal length
> 
> if (Sys.getenv("FULL_TESTS")=="yes") {
+   f2a <- pmcmc(f1,Nmcmc=1000,Np=100,verbose=FALSE)
+   plot(f2a)
+   runs <- rle(as.numeric(conv.rec(f2a,'loglik')))$lengths
+   plot(sort(runs))
+   acf(conv.rec(f2a,c("alpha.2","alpha.3")))
+ }
> 
> ou2 %>%
+   pomp(dprior=function (params, log, ...) {
+     f <- sum(dnorm(params,mean=coef(ou2),sd=1,log=TRUE))
+     if (log) f else exp(f)
+   }) %>%
+ pmcmc(
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.001,alpha.3=0.001)),
+       Np=100,
+       verbose=FALSE
+       ) -> f5
> f5 %>% continue(Nmcmc=20) -> f6
> plot(f6)
> 
> ff <- c(f4,f6)
> plot(ff)
> plot(conv.rec(ff,c("alpha.2","alpha.3","loglik")))
> 
> ff <- c(f2,f3)
> 
> try(ff <- c(ff,f4,f6))
Error in validObject(.Object) : 
  invalid class "pmcmcList" object: error in 'c': to be combined, 'pmcmc' objects must have chains of equal length
> try(ff <- c(f4,ou2))
Error in c(f4, ou2) : cannot mix 'pmcmc' and non-'pmcmc' objects
> try(ff <- c(ff,ou2))
Error in c(ff, ou2) : cannot mix 'pmcmc' and non-'pmcmc' objects
> 
> plot(ff <- c(ff,f5))
> plot(conv.rec(c(f2,ff),c("alpha.2","alpha.3")))
> plot(conv.rec(ff[2],c("alpha.2")))
> plot(conv.rec(ff[2:3],c("alpha.3")))
> plot(window(conv.rec(ff[2:3],c("alpha.3")),thin=3,start=2))
> plot(conv.rec(ff[[3]],c("alpha.3")))
> 
> sig <- array(data=c(0.1,-0.1,0,0.01),
+              dim=c(2,2),
+              dimnames=list(
+                c("alpha.2","alpha.3"),
+                c("alpha.2","alpha.3")))
> sig <- crossprod(sig)
> 
> ou2 %>%
+   pomp(dprior=function (params, log, ...) {
+     f <- sum(dnorm(params,mean=coef(ou2),sd=1,log=TRUE))
+     if (log) f else exp(f)
+   }) %>%
+   pmcmc(
+         Nmcmc=30,
+         proposal=mvn.rw(sig),
+         Np=100,
+         verbose=FALSE
+         ) -> f7
> plot(f7)
> 
> ou2 %>%
+   pomp(dprior=function (params, log, ...) {
+     f <- sum(dnorm(params,mean=coef(ou2),sd=1,log=TRUE))
+     if (log) f else exp(f)
+   }) %>%
+   pmcmc(
+         Nmcmc=500,Np=500,verbose=FALSE,
+         proposal=mvn.rw.adaptive(rw.sd=c(alpha.2=0.01,alpha.3=0.01),
+           scale.start=50,shape.start=50)) -> f8
Warning message:
1 filtering failure occurred in 'pfilter' 
> f8 %<>% continue(Nmcmc=500,proposal=mvn.rw(covmat(f8)),verbose=FALSE)
> plot(f8)
> 
> library(coda)
> 
> f8 %>% conv.rec(c("alpha.2","alpha.3")) %>%
+   window(start=500) -> trace
> trace <- window(trace,thin=5)
> plot(trace)
> 
> library(ggplot2)
> 
> f8 %>%
+   filter.traj() %>%
+   melt() %>%
+   subset(rep %% 5 == 0) %>%
+   ddply(~time+variable,summarize,
+         prob=c(0.05,0.5,0.95),
+         q=quantile(value,prob=prob)
+         ) %>%
+   ggplot(aes(x=time,y=q,group=prob,color=factor(prob)))+
+   geom_line()+facet_grid(variable~.)+labs(color="quantile",y="value")+
+   theme_bw()
> 
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
 71.868   0.376  72.325 
