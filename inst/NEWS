NEW IN VERSION 0.29-5:
    o  The cholera transmission model from King, A. A., Ionides, E. L., Pascual, M., and Bouma, M. J. (2008) Inapparent infections and cholera dynamics, Nature 454:877--880 together with data from the Dacca district of historic Bengal are now included.
       See 'help(dacca)' for details.

NEW IN VERSION 0.29-1:

    This is a major revision.

    o  Big improvements to the documentation, including worked examples in vignettes and improvements to the manual pages.

    o  Encoding models is now much easier through the use of "plugin" modules.
       These are functions that write the 'rprocess' and 'dprocess' slots given minimal information on the structure of the model.

    o  A plugin for continuous-time Markov process models using the Gillespie algorithm is available.

    o  A plugin for discrete-time Markov processes is now available.

    o  Several example pomps are now loadable via the data() command.

    o  There are changes in the C interface to measurement models that are NOT BACKWARD COMPATIBLE.  
       Existing user measurement model codes will need to be modified, but these changes are minor.
       All this is fully explained in the file CHANGES_0.29-1.txt.

    o  The changes are documented in detail in the file CHANGES_0.29-1.txt.

NEW IN VERSION 0.22-1:
    
    o  The nonlinear forecasting method of Kendall, Ellner, et al. is now implemented in the package.  This is an "indirect inference" method using quasi-likelihood as an objective function.

NEW IN VERSION 0.21-4:

    o  Improved documentation in "euler.Rd".

NEW IN VERSION 0.21-3:

    o   Trajectories of the deterministic skeleton can now be computed via the method "trajectory".

    o	Bug fix in stochastic Euler algorithm.

NEW IN VERSION 0.20-8:

    o   Better error handling in mif

    o	Fix inaccuracy in documentation of 'pomp' arguments 'rmeasure' and 'dmeasure'

NEW IN VERSION 0.20-7:

    o   Bug fix in convergence record storage

NEW IN VERSION 0.20-6:

    o   Bug fix in "intro_to_pomp" vignette
    
NEW IN VERSION 0.20-5:

    o   Better error handling and improved documentation for 'mif'

    o   Testing of examples in the 'examples' directory, including compilation, linking, and running of dynamically-loadable library on unix machines

NEW IN VERSION 0.20-4:

    o   A bug in the Euler simulator was repaired.

    o	The Euler simulator no longer calls GetRNGState() and PutRNGState().
	When a native routine is used for the Euler step, it must contain these calls.

    o	A potential bug in the Euler-multinomial simulator was repaired.

NEW IN VERSION 0.20-2:

    o	The lookup_table (see file 'include/pomp.h') interface for C codes has been streamlined.
        It is now slightly more straightforward to set up a 'struct lookup_table'.
    	See the examples ('include/examples').

    o	Added 'logistic.R' to the 'tests' directory.  
	This is a one-variable stochastic differential equation simulated using Euler-Maruyama.

    o	The SIR example ('examples/sir.R') now includes two pomps: one with native routines implementing rprocess, dprocess, and skeleton, the other using R files.
	The comparison may be instructive.

    o	Several bugs fixed.

NEW IN VERSION 0.20-1

    This is a major revision.

    o	The basic structure of the 'pomp' class has been changed to better support the use of native routines as well as R functions.
	In particular, the 'rmeasure', 'dmeasure', and 'skeleton' methods can now be specified either as R functions or as native routines.
	Native routines are specified by name; an optional 'PACKAGE' argument is provided to narrow the search.
	The search is done not at the time of the call to 'pomp' but at the time the function is used.

    o	Support has been added for covariates, in the form of lookup tables.
        This has been accomplished through the addition of slots 'tcovar', 'covar', and 'covarnames' to the 'pomp' class.
	'rmeasure', 'dmeasure', 'skeleton', and 'init.state' now perform lookup when covariates exist and pass this information to the user-defined function.
	'rprocess' and 'dprocess' receive the full lookup table ('tcovar' plus 'covar').

    o	'rmeasure', 'dmeasure', and 'skeleton' are now specified by a function (or native routine) that does the computation for ONE state vector and ONE parameter vector.
    	This is analogous to the way that 'init.state' has operated from the beginning.
	It greatly simplifies model specification from the user's point of view without changing the low-level methods interfaces (pomp methods 'rmeasure', 'dmeasure', 'skeleton', 'init.states').
	However, THIS CHANGE IS NOT BACKWARD-COMPATIBLE: users will need to rewrite code for the 'rmeasure', 'dmeasure', and 'skeleton' slots.
	In practice, this should not be difficult.
	It involves removing loops over 'times' and columns of 'params' and (if covariates are used in the measurement model or deterministic skeleton) making use of the 'covars' argument passed to the user function.

    o	The interface to the 'euler.simulate' and 'euler.density' facilities have changed to make them consistent with the new pomp class.

    o	The header files have been reorganized: 'include/euler.h' and 'include/lookup_table.h' have been replaced with a single 'include/pomp.h'.
    	Significant additions have been made to support the new structure of the pomp class.
	Specifically, new prototypes have been defined for native routines to implement the measurement model, the process model, and the deterministic skeleton.
